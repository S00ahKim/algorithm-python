'''
백준 1912

n개의 정수로 이루어진 임의의 수열이 주어진다. 
우리는 이 중 연속된 몇 개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다. 단, 수는 한 개 이상 선택해야 한다.
예를 들어서 10, -4, 3, 1, 5, 6, -35, 12, 21, -1 이라는 수열이 주어졌다고 하자. 여기서 정답은 12+21인 33이 정답이 된다.

입력: 첫째 줄에 정수 n(1 ≤ n ≤ 100,000)이 주어지고 둘째 줄에는 n개의 정수로 이루어진 수열이 주어진다. 
      수는 -1,000보다 크거나 같고, 1,000보다 작거나 같은 정수이다.
출력: 첫째 줄에 답을 출력한다.
'''
N = int(input())
input_arr = list(map(int, input().split())) #input 문자열을 int 함수 매핑하고 리스트로 만듦
sum_arr = [0] * 100000 # 배열 초기화
sum_arr[0] = input_arr[0] # 초기값 할당
max_num = input_arr[0] 

for i in range(1, N):
    #sum_arr[i]에 이전 인덱스까지의 최고값+입력값과 입력값 중 큰 것을 넣는다. (음수가 있을 수 있으므로)
    sum_arr[i] = max(input_arr[i], sum_arr[i-1]+input_arr[i]) 
    #이전의 최고값과 이번에 만든 최고값을 비교하여 큰 값을 현재 최고값으로 설정한다.
    max_num = max(max_num, sum_arr[i])

print(max_num)